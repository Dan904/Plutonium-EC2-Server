#
# Nginx.conf for version 6.3.1
# 
# If you make any changes, we need to add it to the template to send to all boxes.
#


user                            nginx;
worker_processes                auto;
error_log                       /var/log/nginx/error.log;
pid                             /var/run/nginx.pid;

events {
    worker_connections          1024;
    multi_accept                on;
    use                         epoll;	
}

http {
    log_format                  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

    access_log                  /var/log/nginx/access.log  main;

    map $scheme $fastcgi_https {        #Detect when HTTPS is used.
          default               off;
          https                 on;
        }
	

    sendfile			on;
    tcp_nopush			on;
    tcp_nodelay			on;
    keepalive_timeout  		3;
    types_hash_max_size		2048;
    
    client_max_body_size 	100m;	
    client_body_timeout 	3m;
    client_header_timeout 	3m;
    client_header_buffer_size 	32k;
    client_body_buffer_size 	128k;
    large_client_header_buffers 64 8k;
    
    server_tokens 		off;
    send_timeout 		3m;
   
 
    open_file_cache 		max=5000 inactive=20s;
    open_file_cache_valid 	30s;
    open_file_cache_min_uses 	2;
    open_file_cache_errors 	on;

    gzip 			on;
    gzip_static 		on;
    gzip_disable 		"msie6";
    gzip_http_version 		1.1;
    gzip_vary 			on;
    gzip_min_length             10240;
    gzip_comp_level 		6;
    gzip_proxied 		any;
    gzip_types 			text/plain text/css text/xml text/x-js text/javascript application/json application/x-javascript application/javascript application/xml application/rss+xml;
    gzip_buffers 		16 8k;

    server_names_hash_bucket_size 64;
    ignore_invalid_headers 	on;	
    keepalive_requests		10000;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    recursive_error_pages	on;
    reset_timedout_connection	on;

    fastcgi_cache_path          /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=1000m inactive=5m;

    geoip_country               /usr/share/GeoIP/GeoIP.dat;
    map $geoip_country_code $allowed_country {

	default no;
	US yes;
	
    }

    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

    include                     /etc/nginx/conf.d/*.conf;

    index                       index.php index.html index.htm;

    server {
        listen                  80 default_server;
        listen                  [::]:80 default_server;
        server_name             {{ec2_tag_Domain}};
	return                  301 https://$host$request_uri;
        root                    /var/www/html;
	index                   index.php index.html index.htm;

	if ($allowed_country = no) {
		return 444;
	}

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
	try_files $uri $uri/ /index.php?$args;
	# index index.php index.html index.htm;
        }

	location /phpMyAdmin { 
 		allow 76.17.118.203/32;
		allow 75.112.3.50/32;
		allow 68.205.8.200/32;		
		
		deny all;
                alias   /usr/share/phpMyAdmin/; 
                index  index.php index.html index.htm; 
        }


        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
            location = /40x.html {
		root /var/www/html;
        }
	
	error_page 403 =404;

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
		root /var/www/html;
        }


        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {

 # Setup var defaults
                set $no_cache "";
                # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
                if ($request_method !~ ^(GET|HEAD)$) {
                    set $no_cache "1";
                }
                # Drop no cache cookie if need be
                # (for some reason, add_header fails if included in prior if-block)
                if ($no_cache = "1") {
                    add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
                    add_header X-Microcachable "0";
                }
                # Bypass cache if no-cache cookie is set
                if ($http_cookie ~* "_mcnc") {
                            set $no_cache "1";
                }
                # Bypass cache if flag is set
            fastcgi_no_cache $no_cache;
            fastcgi_cache_bypass $no_cache;
            fastcgi_cache microcache;
            fastcgi_cache_key $scheme$host$request_uri$request_method;
            fastcgi_cache_valid 200 301 302 10m;
            fastcgi_cache_use_stale updating error timeout invalid_header http_500;
            fastcgi_pass_header Set-Cookie;
            fastcgi_pass_header Cookie;
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
            fastcgi_split_path_info ^(.+.php)(/.+)$;
            fastcgi_param HTTPS on;
            fastcgi_param HTTPS $fastcgi_https;

            fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;
	    fastcgi_buffer_size 128k;
	    fastcgi_buffers 256 16k;
	    fastcgi_busy_buffers_size 256k;
	    fastcgi_temp_file_write_size 256k;
	    fastcgi_read_timeout 240;
            include        fastcgi_params;
	#    fastcgi_intercept_errors        on;
        #    error_page 404 /error/404.php;
        }

	location = /xmlrpc.php {
		deny all;
		access_log off;
		log_not_found off;
	}

	location ~* /wp-content/.*.php$ {
		allow 76.17.118.203/32;
		allow 75.112.3.50/32;
		allow 68.205.8.200/32;		
		
		deny all;
		access_log off;
		log_not_found off;
	}

	location ~* /(?:uploads|files)/.*.php$ {
		allow 76.17.118.203/32;
		allow 75.112.3.50/32;
		allow 68.205.8.200/32;		
		
		deny all;
		access_log off;
		log_not_found off;
	}
	
	location ~* wp-config.php {
		allow 76.17.118.203/32;
		allow 75.112.3.50/32;
		allow 68.205.8.200/32;		
		
		deny all;
		access_log off;
		log_not_found off;
	}

	location ~ /\. { access_log off; log_not_found off; deny all; }
	location ~ ~$ { access_log off; log_not_found off; deny all; }
	location = /robots.txt { access_log off; log_not_found off; }		
	location = /favicon.ico { access_log off; log_not_found off; }
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        	access_log off;
		expires max;
        	log_not_found off;
	}
	
#	location ~* wp-admin/includes { deny all; }
    	location ~* wp-includes/theme-compat/ { deny all; }
    	location ~* wp-includes/js/tinymce/langs/.*\.php { deny all; }	
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

# Settings for a TLS enabled server.

    server {
        listen       		443 ssl;
        listen       		[::]:443 ssl;
        server_name  		{{ec2_tag_Domain}};
        root         		/var/www/html;
	keepalive_timeout 	70;
        ssl_certificate "/etc/letsencrypt/live/{{ec2_tag_Domain}}/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/{{ec2_tag_Domain}}/privkey.pem";
        # It is *strongly* recommended to generate unique DH parameters
        # Generate them with: openssl dhparam -out /etc/pki/nginx/dhparams.pem 2048
        ssl_dhparam "/etc/pki/nginx/dhparams.pem";
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#        ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;

	ssl_stapling on;
	ssl_stapling_verify on;



        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
       		try_files $uri $uri/ /index.php?$args;
	}

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}

